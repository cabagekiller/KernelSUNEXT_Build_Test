name: Build Nameless OPlus SM8250 Kernel

on:
  workflow_dispatch:
  push:
    branches:
      - main # Or your main branch name

env:
  TZ: Asia/Shanghai

jobs:
  build:
    name: Build Kernel
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Set swap to 10G
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 10

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python2 git ccache automake flex lzop bison cpio gperf \
                                  build-essential zip curl zlib1g-dev g++-multilib libxml2-utils \
                                  bzip2 libbz2-dev libbz2-1.0 libghc-bzlib-dev squashfs-tools \
                                  pngcrush schedtool dpkg-dev liblz4-tool make optipng maven \
                                  libssl-dev pwgen libswitch-perl policycoreutils minicom \
                                  libxml-sax-base-perl libxml-simple-perl bc libc6-dev-i386 \
                                  lib32ncurses5-dev libx11-dev lib32z-dev libgl1-mesa-dev xsltproc \
                                  unzip device-tree-compiler python2 python3

      - name: Update repo
        run: |
          mkdir -p ~/bin
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
          chmod a+x ~/bin/repo
          export PATH=~/bin:$PATH

      - name: Create workspace
        run: |
          mkdir kernel_workspace
          cd kernel_workspace

      - name: Download kernel source
        run: |
          git clone --recursive https://github.com/OnePlusOSS/kernel_manifest.git -b oneplus/sm8650
          cd android-kernel/scripts
          sed -i 's/ -dirty//g' setlocalversion

      - name: Setup KernelSU
        run: |
          cd ../
          patch -p1 < $GITHUB_WORKSPACE/patches/non-gki-su.diff || echo "Non-GKI patch failed, skipping."
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-android14-6.1
          cp ./susfs4ksu/kernel_patches/include/linux/susfs.h include/linux/
          cp ./susfs4ksu/kernel_patches/fs/susfs.c fs/
          cp ./susfs4ksu/kernel_patches/include/linux/susfs_def.h include/linux/
          cp ./susfs4ksu/kernel_patches/50_add_susfs_in_gki-android14-6.1.patch .
          git clone https://github.com/rifsxd/KernelSU-Next.git -b next
          cp ./susfs4ksu/kernel_patches/KernelSU/10_enable_susfs_for_ksu.patch KernelSU-Next/
          git config --global user.email "test"
          git config --global user.name "test"
          cd KernelSU-Next
          patch -p1 < 10_enable_susfs_for_ksu.patch || echo "Patch failed, skipping."
          git restore kernel/core_hook.c
          patch -p1 < $GITHUB_WORKSPACE/patches/ksu-susfs.patch || echo "Non-GKI patch failed, skipping."
          git add .
          git checkout -b 'test'
          git commit -m 'test'
          cd ..
          bash KernelSU-Next/kernel/setup.sh test
          patch -p1 < 50_add_susfs_in_gki-android14-6.1.patch || echo "Patch failed, skipping."
          sed -i '/struct ratelimit_state ratelimit;/a\#if defined(CONFIG_KSU_SUSFS) && !defined(ANDROID_KABI_RESERVE)\nu64 android_kabi_reserved2;\n#endif\nANDROID_KABI_RESERVE(1);\nANDROID_KABI_RESERVE(2);' include/linux/sched/user.h 
          echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV

      - name: Download Clang-aosp
        run: |
          mkdir clang-aosp
          wget https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/main/clang-r522817.tar.gz
          tar -C clang-aosp/ -zxvf clang-r522817.tar.gz

      - name: Download GCC-aosp
        run: |
          mkdir gcc-64
          wget -O gcc-aarch64.tar.gz https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9/+archive/refs/tags/android-12.1.0_r27.tar.gz
          tar -C gcc-64/ -zxvf gcc-aarch64.tar.gz

      - name: Build kernel
        run: |
          export ARCH=arm64
          export SUBARCH=arm64
          export BRAND_SHOW_FLAG=oneplus
          export PATH=$GITHUB_WORKSPACE/kernel_workspace/clang-aosp/bin:$GITHUB_WORKSPACE/kernel_workspace/gcc-64/bin:$PATH
          export KBUILD_BUILD_HOST=Github-Action
          export KBUILD_BUILD_USER=$(echo ${{ github.actor }} | tr A-Z a-z)
          BA_CMD="CLANG_TRIPLE=aarch64-linux-gnu- CROSS_COMPILE=aarch64-linux-android-"
          EX_CMD="LD=ld.lld LLVM=1 LLVM_IAS=1"
          DEFCONFIG="vendor/kona-perf_defconfig vendor/debugfs.config"
          make O=out ARCH=arm64 CC=clang $BA_CMD $EX_CMD $DEFCONFIG
          make -j$(nproc --all) O=out ARCH=arm64 CC=clang $BA_CMD $EX_CMD

      - name: Check kernel output files
        run: |
          if [ -f out/arch/arm64/boot/Image ]; then
            echo "CHECK_IMAGE=true" >> $GITHUB_ENV
          else
            echo "Kernel output file is empty"
            exit 1
          fi

      - name: Make AnyKernel3
        if: env.CHECK_IMAGE == 'true'
        run: |
          git clone https://github.com/osm0sis/AnyKernel3 --depth=1 AnyKernel3
          sed -i 's/do.devicecheck=1/do.devicecheck=0/g' AnyKernel3/anykernel.sh
          sed -i 's!BLOCK=/dev/block/platform/omap/omap_hsmmc.0/by-name/boot;!BLOCK=auto;!g' AnyKernel3/anykernel.sh
          sed -i 's/IS_SLOT_DEVICE=0;/IS_SLOT_DEVICE=auto;/g' AnyKernel3/anykernel.sh
          cp out/arch/arm64/boot/Image AnyKernel3/
          rm -rf AnyKernel3/.git* AnyKernel3/README.md

      - name: Compress AnyKernel3 folder to zip
        run: |
          cd AnyKernel3
          zip -r $GITHUB_WORKSPACE/AK3-Nameless-OPlus-SM8250-Official-KSU_${{ env.KSUVER }}-${{ env.BUILD_TIME }}.zip ./*

      - name: Upload Image
        if: env.CHECK_IMAGE == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: Image-Official-KSU_${{ env.KSUVER }}
          path: out/arch/arm64/boot/Image

      - name: Upload AnyKernel3
        if: env.CHECK_IMAGE == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: AK3-Nameless-OPlus-SM8250-Official-KSU_${{ env.KSUVER }}-${{ env.BUILD_TIME }}
          path: AnyKernel3/*
